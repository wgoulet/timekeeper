<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<title>TimeTracker</title>
</head>
<a href="http://jquery.com/">jQuery</a>
<script src="https://www.vivaciousmezzo.com/timesheet/libs/jquery.js"></script>
<script src="https://www.vivaciousmezzo.com/timesheet/libs/dist/jquery.handsontable.full.js"></script>
<link rel="stylesheet" media="screen" href="https://www.vivaciousmezzo.com/timesheet/libs/dist/jquery.handsontable.full.css">
<link rel="stylesheet" media="screen" href="https://www.vivaciousmezzo.com/timesheet/libs/demo/css/samples.css">

<div class="handsontable" id="timesheet"></div>
<input type="button" class="Save" title="Save" value="Save Data" id="btnSave">Save Data</button>
<input type="button" class="ChangeColor" title="Change Color" value="Change Color" id="btnChangeColor"></button>

<!--
Need to fix path to libraries so that they are loaded correctly. If I
just reference them from the current directory, the Flask application
is routed the request to load the libraries which naturally fails.

What I want to do is make the libraries load from another directory
so that the request to fetch them is not sent to my Flask application.

!-->

<script>
$(document).ready(function () {
 var data = [
        ["Task", "Sun", "Mon", "Tues", "Wed","Thurs","Fri","Sat"],
        ["Marketing", 1, 0, 1, 2,0,1,3],
        ["Teaching",  1, 0, 1, 2,0,1,3],
        ["Business Development",1, 0, 1, 2,0,1,3],
        ["Research", 1, 0, 1, 2,0,1,3],
        ["Practice", 1, 0, 1, 2,0,1,3]
      ]; 
  $('#timesheet').handsontable({
    data: data,
    minSpareRows: 1,
    colHeaders: true,
    contextMenu: true
  });
  $('#btnChangeColor').on("click",function(){
    $('#btnSave').css("background-color","blue");	  
  });

 //Get the data from example data and turn it into JSON
  $('#btnSave').on("click",function() {
  var $container = $('#timesheet');
  var table = $container.data('handsontable');
  console.log("test");
  $.ajax({
    type: "POST",
    url: "http://www.vivaciousmezzo.com:5000/timesheet/savedata",
    // The key needs to match your method's input parameter (case-sensitive).
    data: {"data": table.getData()},
    dataType: "json",
    success: function(data){alert(data);},
    failure: function(errMsg) {
        alert(errMsg);
      }

    });
  });
});
</script>
</body>
</html>
